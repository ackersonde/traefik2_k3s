apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik2-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      run: traefik2-proxy
  template:
    metadata:
      labels:
        run: traefik2-proxy
    spec:
      serviceAccountName: traefik2-ingress-controller
      terminationGracePeriodSeconds: 60
      restartPolicy: Always
      containers:
      - image: traefik:2.3
        imagePullPolicy: Always
        name: traefik2-ctr
        ports:
          - name: web
            containerPort: 80
          - name: admin
            containerPort: 8080
          - name: secure
            containerPort: 443
        readinessProbe:
          httpGet:
            path: /ping
            port: admin
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: admin
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        args:
          - --entryPoints.web.address=:80
          - --entryPoints.secure.address=:443
          - --entryPoints.secure.http.tls.certResolver=letsencrypt
          - --entryPoints.secure.http.tls.domains[0].main=*.ackerson.de
          - --entryPoints.secure.http.tls.domains[0].sans=ackerson.de
          - --entryPoints.traefik.address=:8080
          - --api.dashboard=true
          - --api.insecure=true
          - --ping=true
          - --providers.kubernetesCRD
          - --providers.kubernetesIngress=true
          - --log.level=WARN
          - --metrics.prometheus=false
          - --metrics.prometheus.addEntryPointsLabels=true
          - --metrics.prometheus.addServicesLabels=true
          - --metrics.prometheus.manualrouting=true
          - --certificatesresolvers.letsencrypt.acme.email=dan@ackerson.de
          - --certificatesresolvers.letsencrypt.acme.storage=/data/acme.json
          - --certificatesResolvers.letsencrypt.acme.dnsChallenge.provider=digitalocean
          - --certificatesResolvers.letsencrypt.acme.dnsChallenge.delayBeforeCheck=5
          # Please note that this is the staging Let's Encrypt server.
          # Once you get things working, you should remove that whole line altogether.
          # - --certificatesresolvers.letsencrypt.acme.CAserver=https://acme-staging-v02.api.letsencrypt.org/directory
        env:
          - name: DO_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: digital-ocean-secret
                key: digital-ocean-token
        volumeMounts:
          - name: storage-volume
            mountPath: /data
      volumes:
        - name: storage-volume
          persistentVolumeClaim:
            claimName: traefik-acme-storage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: traefik-acme-storage
  labels:
    run: traefik2-proxy
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Mi

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: task-pv-volume
spec:
  storageClassName: manual
  capacity:
    storage: 10Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/{{CTX_K8S_SSH_USER}}/traefik"
