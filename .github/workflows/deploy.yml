name: Deploy K3s + Traefik v2

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    env:
      K8S_DASH_VERSION: v2.0.4
      METALLB_VERSION: v0.9.4
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Install wireguard and apache2-utils (for htpasswd)
      run: sudo apt-get install wireguard apache2-utils

    - name: Create wireguard tunnel configuration
      run: |
        sed -i -e "s@{{CTX_WIREGUARD_PRIVATE_KEY}}@${{ secrets.CTX_WIREGUARD_PRIVATE_KEY }}@" tunnel.conf
        sed -i -e "s@{{CTX_WIREGUARD_SERVER_PUBLIC_KEY}}@${{ secrets.CTX_WIREGUARD_SERVER_PUBLIC_KEY }}@" tunnel.conf
        sed -i -e "s@{{CTX_WIREGUARD_PRESHARED_KEY}}@${{ secrets.CTX_WIREGUARD_PRESHARED_KEY }}@" tunnel.conf
        sed -i -e "s@{{CTX_WIREGUARD_SERVER_ENDPOINT}}@${{ secrets.CTX_WIREGUARD_SERVER_ENDPOINT }}@" tunnel.conf

        sudo cp tunnel.conf /etc/wireguard/

    - name: Prepare ssh key for remote login
      run: |
        mkdir ~/.ssh/
        # cat ~/path/to/secret.file | base64 | tr -d \\n > .base64_enc # how to get input
        echo "${{ secrets.CTX_SERVER_DEPLOY_SECRET_B64 }}" | base64 -d > ~/.ssh/id_ed25519
        echo "${{ secrets.CTX_SERVER_DEPLOY_CACERT_B64 }}" | base64 -d > ~/.ssh/id_ed25519-cert.pub
        chmod 600 ~/.ssh/id_ed25519

    - name: Configure secrets
      run: |
        sed -i -e "s@{{CTX_ROUTER_PASSWD}}@${{ secrets.CTX_ROUTER_PASSWD }}@" scripts/fritz-cert-upload.sh

        sed -i -e "s@{{CACERT_KEY_PASS}}@${{ secrets.CACERT_KEY_PASS }}@" scripts/github_deploy_params
        sed -i -e "s@{{GIT_APP_CLIENT_ID}}@${{ secrets.GIT_APP_CLIENT_ID }}@" scripts/github_deploy_params
        sed -i -e "s@{{GIT_INSTALL_ID}}@${{ secrets.GIT_INSTALL_ID }}@" scripts/github_deploy_params
        sed -i -e "s@{{GIT_APP_SECRETS_PK_PEM_FILE}}@${{ secrets.GIT_APP_SECRETS_PK_PEM_FILE }}@" scripts/github_deploy_params
        sed -i -e "s@{{CTX_SLACK_NOTIFICATIONS_TOKEN}}@${{ secrets.CTX_SLACK_NOTIFICATIONS_TOKEN }}@" scripts/github_deploy_params
        chmod 600 scripts/github_deploy_params

        echo "${{ secrets.GIT_APP_SECRETS_PK_PEM }}" > ${{ secrets.GIT_APP_SECRETS_PK_PEM_FILE }}
        chmod 600 ${{ secrets.GIT_APP_SECRETS_PK_PEM_FILE }}
        echo "${{ secrets.CA_KEY }}" > ca_key
        chmod 600 ca_key

        htpasswd -cb .htpasswd ${{ secrets.CTX_BASIC_AUTH_USER }} ${{ secrets.CTX_BASIC_AUTH_PASSWD }}
        base64 .htpasswd | tr -d \\n > .base64_enc
        export HTPASSWD_B64=`cat .base64_enc`

        echo -n "${{ secrets.CTX_DIGITALOCEAN_TOKEN }}" | base64 | tr -d \\n > .base64_enc
        export CTX_DIGITALOCEAN_TOKEN_B64=`cat .base64_enc`

        sed -i -e "s@{{HTPASSWD_B64}}@$HTPASSWD_B64@" config/base-deploy/02-svcs-middleware-secrets.yml
        sed -i -e "s@{{CTX_DIGITALOCEAN_TOKEN_B64}}@$CTX_DIGITALOCEAN_TOKEN_B64@" config/base-deploy/02-svcs-middleware-secrets.yml
        sed -i -e "s@{{CTX_K8S_SSH_HOST}}@${{ secrets.CTX_K8S_SSH_HOST }}@" config/base-deploy/02-svcs-middleware-secrets.yml

        sed -i -e "s@{{CTX_K8S_SSH_USER}}@${{ secrets.CTX_K8S_SSH_USER }}@" config/base-deploy/03-deployments.yml
        sed -i -e "s@{{PILOT_TOKEN}}@${{ secrets.PILOT_TOKEN }}@" config/base-deploy/03-deployments.yml

        echo -n "${{ secrets.CTX_PIHOLE_WEBPASSWORD }}" | base64 | tr -d \\n > .base64_enc
        export PIHOLE_WEBPASSWORD_B64=`cat .base64_enc`
        sed -i -e "s@{{PIHOLE_WEBPASSWORD_B64}}@$PIHOLE_WEBPASSWORD_B64@" config/proxied-apps/05-pihole.yml
        sed -i -e "s@{{CTX_K8S_SSH_USER}}@${{ secrets.CTX_K8S_SSH_USER}}@g" config/proxied-apps/05-pihole.yml

        rm .base64_enc

    - name: Deploy the package
      env:
        K8S_DASH_BASE_URL: https://raw.githubusercontent.com/kubernetes/dashboard/${{ env.K8S_DASH_VERSION }}/aio/deploy/alternative.yaml
        METALLB_BASE_URL: https://raw.githubusercontent.com/metallb/metallb/${{ env.METALLB_VERSION }}/manifests
        SSH_CXN: ${{ secrets.CTX_K8S_SSH_USER }}@${{ secrets.CTX_K8S_SSH_HOST }}
      run: |
        ssh-keygen -L -f ~/.ssh/id_ed25519-cert.pub
        wg-quick up tunnel

        ssh -o StrictHostKeyChecking=no $SSH_CXN << EOF
          crontab /tmp/crontab.txt
          mkdir traefik || true && mkdir k3s || true && mkdir my-ca || true
          touch traefik/acme.json && chmod 600 traefik/acme.json

          export LOG_FILES="/var/log/update_domain_records.log /var/log/gen_new_deploy_keys.log /var/log/fritz-cert-upload.log"
          sudo touch -m $LOG_FILES
          sudo chown ubuntu:ubuntu $LOG_FILES
        EOF

        scp -r config/* $SSH_CXN:~/k3s/
        scp scripts/fritz-cert-upload.sh scripts/traefik-certs-dumper $SSH_CXN:~/traefik/
        scp scripts/update_*.sh $SSH_CXN:~/
        scp scripts/crontab.txt $SSH_CXN:/tmp/
        scp scripts/gen_new_deploy_keys.sh scripts/github_deploy_secrets.py ${{ secrets.GIT_APP_SECRETS_PK_PEM_FILE }} ca_key $SSH_CXN:~/my-ca/
        scp scripts/github_deploy_params $SSH_CXN:~/.ssh/

        ssh $SSH_CXN << EOF
          curl -sfL https://get.k3s.io | \
            sh -s - server --disable=traefik \
            --disable=servicelb --disable=metrics-server \
            --kubelet-arg="containerd=/run/k3s/containerd/containerd.sock" \
            --kubelet-arg="authorization-mode=Webhook" \
            --kubelet-arg="authentication-token-webhook=true"

          sudo kubectl delete secret dockerhub || true
          sudo kubectl create secret docker-registry dockerhub \
            --docker-server=https://index.docker.io/v1/ \
            --docker-username=${{ secrets.CTX_DOCKER_USER }} \
            --docker-password=${{ secrets.CTX_DOCKER_PASS }} \
            --docker-email=dan@ackerson.de

          sudo kubectl apply \
            -f ${{ env.METALLB_BASE_URL }}/namespace.yaml \
            -f ${{ env.METALLB_BASE_URL }}/metallb.yaml
          export METALLB_MEMBERLIST_KEY=`openssl rand -base64 128 | tr -d \\\\r\\\\n`
          sudo kubectl create secret generic -n metallb-system memberlist \
            --from-literal=secretkey="$METALLB_MEMBERLIST_KEY" || true

          sudo kubectl apply -f ${{ env.K8S_DASH_BASE_URL }} -f k3s/monitoring/k3s-dashboard-admin.yml
          sudo kubectl apply -f k3s/base-deploy -f k3s/proxied-apps
        EOF

        sudo rm -Rf config tunnel.conf ca_key ${{ secrets.GIT_APP_SECRETS_PK_PEM_FILE }} scripts/github_deploy_params
        wg-quick down tunnel

        curl -s -o /dev/null -X POST -d token=${{ secrets.CTX_SLACK_NOTIFICATIONS_TOKEN }} -d channel=C092UE0H4 \
          -d text="<https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID | $GITHUB_REPOSITORY @ $GITHUB_RUN_ID>" \
          https://slack.com/api/chat.postMessage
