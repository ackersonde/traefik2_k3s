version: 2.1

orbs:
  ipsec: danackerson/ipsec@2.1.1

jobs:
  build:
    docker:
      - image: alpine
    working_directory: /setup
    steps:
      - checkout
      - run:
          name: Prepare YAML config files
          command: |
            chmod 600 config/base-deploy/*.yml config/proxied-apps/*.yml config/monitoring/*.yml
            sed -i -e "s@{{ROUTER_PASSWD}}@$ROUTER_PASSWD@" scripts/fritz-cert-upload.sh
            
            apk -u add apache2-utils
            htpasswd -cb .htpasswd $CTX_BASIC_AUTH_USER $CTX_BASIC_AUTH_PASSWD
            base64 .htpasswd | tr -d \\n > .base64_enc
            export HTPASSWD_B64=`cat .base64_enc`
            sed -i -e "s@{{HTPASSWD_B64}}@$HTPASSWD_B64@" config/base-deploy/02-svcs-middleware-secrets.yml

            echo -n "$CTX_DIGITALOCEAN_TOKEN" | base64 | tr -d \\n > .base64_enc
            export CTX_DIGITALOCEAN_TOKEN_B64=`cat .base64_enc`
            sed -i -e "s@{{CTX_DIGITALOCEAN_TOKEN_B64}}@$CTX_DIGITALOCEAN_TOKEN_B64@" config/base-deploy/02-svcs-middleware-secrets.yml

            sed -i -e "s@{{INTERNAL_HOST_IP}}@$INTERNAL_HOST_IP@" config/base-deploy/02-svcs-middleware-secrets.yml

            sed -i -e "s@{{SSH_USER}}@$SSH_USER@" config/base-deploy/03-deployments.yml

            echo -n "$PIHOLE_WEBPASSWORD" | base64 | tr -d \\n > .base64_enc
            export PIHOLE_WEBPASSWORD_B64=`cat .base64_enc`
            sed -i -e "s@{{PIHOLE_WEBPASSWORD_B64}}@$PIHOLE_WEBPASSWORD_B64@" config/proxied-apps/05-pihole.yml

            sed -i -e "s@{{SSH_USER}}@$SSH_USER@g" config/proxied-apps/05-pihole.yml

            rm .base64_enc
      - persist_to_workspace:
          root: /setup
          paths:
            - config/monitoring/k3s-dashboard-admin.yml
            - config/base-deploy/00-deploy-metallb.yml
            - config/base-deploy/01-clusterrole-CRDs.yml
            - config/base-deploy/02-svcs-middleware-secrets.yml
            - config/base-deploy/03-deployments.yml
            - config/base-deploy/04-ingressroutes.yml
            - config/proxied-apps/05-pihole.yml
            - config/proxied-apps/06-plex.yml
            - config/proxied-apps/07-transmission.yml
            - config/proxied-apps/08-urbit.yml
            - scripts/fritz-cert-upload.sh
            - scripts/update_domain_records.sh
            - scripts/update_gcp_ssh_firewall.sh

commands:
  prepare_deploy_script:
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Prepare deploy script for Traefik Proxy server
          command: |
            export K8S_DASH_VERSION=v2.0.1
            export K8S_DASH_URL=https://raw.githubusercontent.com/kubernetes/dashboard/$K8S_DASH_VERSION/aio/deploy/alternative.yaml
            export METALLB_VERSION=v0.9.3
            export METALLB_BASE_URL=https://raw.githubusercontent.com/metallb/metallb/$METALLB_VERSION/manifests

            cat \<<EOF >/tmp/deploy_script.sh

            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST \
             "mkdir traefik || true && mkdir k3s || true && \
              touch traefik/acme.json && chmod 600 traefik/acme.json && \
              sudo touch /var/log/update_gcp_ssh_firewall.log && \
              sudo touch /var/log/update_domain_records.log"

            scp -r /tmp/config/* $SSH_USER@$SSH_HOST:~/k3s/
            scp /tmp/scripts/update_gcp_ssh_firewall.sh $SSH_USER@$SSH_HOST:~/
            scp /tmp/scripts/update_domain_records.sh $SSH_USER@$SSH_HOST:~/
            scp /tmp/scripts/fritz-cert-upload.sh $SSH_USER@$SSH_HOST:~/traefik/
            scp /tmp/scripts/traefik-certs-dumper $SSH_USER@$SSH_HOST:~/traefik/

            ssh $SSH_USER@$SSH_HOST "curl -sfL https://get.k3s.io | \
                sh -s - server --disable=traefik \
                --disable=servicelb --disable=metrics-server \
                --kubelet-arg="containerd=/run/k3s/containerd/containerd.sock" \
                --kubelet-arg="authorization-mode=Webhook" \
                --kubelet-arg="authentication-token-webhook=true" && \

              sudo kubectl delete secret dockerhub || true && \
              sudo kubectl create secret docker-registry dockerhub \
                --docker-server=https://index.docker.io/v1/ \
                --docker-username=$CTX_DOCKER_USER \
                --docker-password=$CTX_DOCKER_PASS \
                --docker-email=dan@ackerson.de && \

              sudo kubectl apply \
                -f $K8S_DASH_URL -f $METALLB_BASE_URL/namespace.yaml \
                -f $METALLB_BASE_URL/metallb.yaml && \
              sudo kubectl create secret generic -n metallb-system memberlist \
                --from-literal=secretkey=\"$(openssl rand -base64 128)\" || true && \

              sudo kubectl apply \
                -f k3s/base-deploy \
                -f k3s/proxied-apps"
            EOF

            chmod u+x /tmp/deploy_script.sh

workflows:
  build-deploy:
    jobs:
      - build:
          context: org-global
      - ipsec/remote-deploy:
          context: org-global
          name: deploy-k3s-traefik
          requires:
              - build
          pre-steps:
            - prepare_deploy_script

# TODO - perhaps we can now trigger pipeline builds? https://circleci.com/docs/2.0/pipeline-variables/
# https://circleci.com/docs/api/v2/#trigger-a-new-pipeline
# https://github.com/CircleCI-Public/api-preview-docs/blob/master/docs/pipeline-parameters.md
