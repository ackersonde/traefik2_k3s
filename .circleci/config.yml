version: 2.1

orbs:
  ipsec: danackerson/ipsec@0.2.4

jobs:
  build:
    docker:
      - image: alpine
    working_directory: /setup
    steps:
      - checkout
      - run:
          name: Prepare YAML config files
          command: |
            apk -u add apache2-utils
            chmod 600 *.yml

            htpasswd -cb .htpasswd $CTX_BASIC_AUTH_USER $CTX_BASIC_AUTH_PASSWD
            base64 .htpasswd | tr -d \\n > .base64_enc
            export HTPASSWD_B64=`cat .base64_enc`
            sed -i -e "s@{{HTPASSWD_B64}}@$HTPASSWD_B64@" 02-svcs-middleware-secrets.yml

            echo -n "$CTX_DIGITALOCEAN_TOKEN" | base64 | tr -d \\n > .base64_enc
            export CTX_DIGITALOCEAN_TOKEN_B64=`cat .base64_enc`
            sed -i -e "s@{{CTX_DIGITALOCEAN_TOKEN_B64}}@$CTX_DIGITALOCEAN_TOKEN_B64@" 02-svcs-middleware-secrets.yml

            echo -n "$CTX_DATADOG_API_KEY" | base64 | tr -d \\n > .base64_enc
            export CTX_DATADOG_API_KEY_B64=`cat .base64_enc`
            sed -i -e "s@{{CTX_DATADOG_API_KEY_B64}}@$CTX_DATADOG_API_KEY_B64@" datadog-agent.yml

            rm .base64_enc
      - persist_to_workspace:
          root: /setup
          paths:
            - 01-clusterrole-CRDs.yml
            - 02-svcs-middleware-secrets.yml
            - 03-deployments.yml
            - 04-ingressroutes.yml
            - datadog-agent.yml
            - whoami.yml
            - update_domain_records.sh

commands:
  prepare_deploy_script:
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Prepare deploy script for Traefik Proxy server
          command: |
            cat \<<EOF >deploy_script.sh
            scp -o StrictHostKeyChecking=no /tmp/*.yml /tmp/update_domain_records.sh $SSH_USER@$SSH_HOST:~/
            ssh $SSH_USER@$SSH_HOST "mkdir traefik || true && \
              touch traefik/acme.json && \
              chmod 600 traefik/acme.json && \

              curl -sfL https://get.k3s.io | \
                sh -s - server --no-deploy traefik --no-deploy servicelb && \

              export INTERNAL_HOST_IP=`host $SSH_HOST | grep 'address' | cut -d' ' -f4 | head -n1` && \
              sed -i -e "s@{{INTERNAL_HOST_IP}}@$INTERNAL_HOST_IP@" 02-svcs-middleware-secrets.yml && \

              sudo kubectl apply -f 01-clusterrole-CRDs.yml && \
              sudo kubectl apply -f 02-svcs-middleware-secrets.yml && \
              sudo kubectl apply -f 03-deployments.yml && \
              sudo kubectl apply -f 04-ingressroutes.yml && \
              sudo kubectl create secret docker-registry dockerhub \
                --docker-server=https://index.docker.io/v1/ \
                --docker-username=$CTX_DOCKER_USER \
                --docker-password=$CTX_DOCKER_PASS \
                --docker-email=dan@ackerson.de"
            EOF

            chmod u+x deploy_script.sh

workflows:
  build-deploy:
    jobs:
      - build:
          context: org-global
      - ipsec/remote-deploy:
          context: org-global
          name: deploy-k3s-traefik
          requires:
              - build
          pre-steps:
            - prepare_deploy_script

# TODO - perhaps we can now trigger pipeline builds? https://circleci.com/docs/2.0/pipeline-variables/
# https://circleci.com/docs/api/v2/#trigger-a-new-pipeline
# https://github.com/CircleCI-Public/api-preview-docs/blob/master/docs/pipeline-parameters.md
